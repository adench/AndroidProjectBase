apply plugin: 'com.android.application'

def keystorePropertiesFile = file("app_config.properties")
def kProperties = new Properties()
kProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.xqkj.projectbase"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                JSHARE_PKGNAME : applicationId,
                JPUSH_APPKEY : "appkey", //极光控制台创建应用得到的AppKey.
                JPUSH_CHANNEL : "baselibrary", //暂时填写默认值即可.
        ]
    }

    /** 配置签名文件 **/
    signingConfigs {
        release {
            keyAlias kProperties['keyAlias']
            keyPassword kProperties['keyPassword']
            storeFile file(kProperties['storeFile'])
            storePassword kProperties['storePassword']
        }

        debug {
            keyAlias kProperties['keyAlias']
            keyPassword kProperties['keyPassword']
            storeFile file(kProperties['storeFile'])
            storePassword kProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    buildTypes {
        debug {// 测试环境
            //是否对代码进行混淆
            minifyEnabled false
            //指定混淆的规则文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 配置URL前缀
            buildConfigField("String", "BASE_URL", kProperties['DEBUG_BASE_URL'])

            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.debug//设置签名信息
            zipAlignEnabled true//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率
        }
        release {// 生产环境
            minifyEnabled false//是否对代码进行混淆
            //指定混淆的规则文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // 配置URL前缀
            buildConfigField("String", "BASE_URL", kProperties['RELEASE_BASE_URL'])

            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release//设置签名信息
            zipAlignEnabled true//是否对APK包执行ZIP对齐优化，减小zip体积，增加运行效率
        }

        //批量打包(gradle 3.0.0 以上)
        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def isRelease = variant.buildType.name.contains('release')
                def fileName = "demo.apk"
                if (isRelease) {
                    fileName = "demo_release_${defaultConfig.versionName}.apk"
                } else {
                    fileName = "demo_debug_${defaultConfig.versionName}.apk"
                }
                outputFileName = fileName
            }
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.android.support:appcompat-v7:30.+'

    implementation project(':baselibrary')

    //view注解
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    //tab
    implementation'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
}
